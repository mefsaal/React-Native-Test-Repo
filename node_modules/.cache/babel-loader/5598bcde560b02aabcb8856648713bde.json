{"ast":null,"code":"var _jsxFileName = \"/home/astora/VSCode/create-react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TodoList } from \"./components/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"todoApp.todos\";\nexport function App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Tarea 1\",\n    completed: false\n  }]);\n  const todoTaskRef = useRef();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todoApp.todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const toogleTodo = id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  const handleTodoAdd = () => {\n    const task = todoTaskRef.current.value;\n    if (task === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        task,\n        completed: false\n      }];\n    });\n    todoTaskRef.current.value = null;\n  };\n\n  const handleClearAll = () => {\n    const newTodos = todos.filter(todo => !todo.completed);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toogleTodo: toogleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoTaskRef,\n      type: \"text\",\n      placeholder: \"Nueva Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTodoAdd,\n      children: \" \\u2795\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearAll,\n      children: \"\\uD83D\\uDDD1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Te queda \", todos.filter(todo => !todo.completed).length, \"  tareas por terminar \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"GvXASc3B+6cPcHCylS8SviEVjx0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/astora/VSCode/create-react-app/src/App.jsx"],"names":["React","Fragment","useState","useRef","useEffect","v4","uuidv4","TodoList","KEY","App","todos","setTodos","id","task","completed","todoTaskRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toogleTodo","newTodos","todo","find","handleTodoAdd","current","value","prevTodos","handleClearAll","filter","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TodoList } from \"./components/TodoList\";\n\nconst KEY = \"todoApp.todos\";\n\nexport  function App() {\nconst [todos, setTodos] = useState([\n  { id: 1, task: \"Tarea 1\", completed: false },\n\n]);\n    const todoTaskRef = useRef ();\n\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(KEY));\n        if (storedTodos) {  \n            setTodos(storedTodos);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('todoApp.todos', JSON.stringify(todos));\n    }, [todos]) ;   \n\n    const toogleTodo = (id) => {\n        const newTodos = [...todos];\n        const todo = newTodos.find((todo) => todo.id === id);\n        todo.completed = !todo.completed;\n        setTodos(newTodos);}; \n\n    const handleTodoAdd =() => {\n       const task = todoTaskRef.current.value;\n       if (task ==='' ) return;\n\n        setTodos((prevTodos) => {\n            return [...prevTodos, { id: uuidv4(), task, completed: false }]\n        });\n        todoTaskRef.current.value = null;\n    };\n\n    const handleClearAll = () => {\n        const newTodos = todos.filter((todo) => !todo.completed);\n        setTodos(newTodos);};\n\n\nreturn (\n         <Fragment>\n\n         <TodoList todos={todos} toogleTodo={toogleTodo}/>\n         <input  ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\" />\n        <button onClick={ handleTodoAdd}> âž•</button>\n        <button onClick={ handleClearAll} >ðŸ—‘</button>\n        <div>Te queda {todos.filter((todo) => !todo.completed).length}  tareas por terminar </div>\n         </Fragment>\n         );\n}"]},"metadata":{},"sourceType":"module"}